
AS WE GO => WE MAY WANT TO ADD IDs to some of our html elements to make testing easier!!!

loginSpecialist
==================
1. correct credential
2. wrong username
3. wrong password
4. trying to logging as student in specialist system

loginStudent
===============
1. correct credential - basic
2. correct credential - intermediate
3. correct credential - advanced
2. wrong username
3. wrong password
4. trying to logging as specialist in student system

createAccount
=================
1. email contains blank space
2. password dont match
3. wrong secret
4. email already taken
5. everything correct.

list of email - covers all three student systems and admin list of emails
==============================
check if loaded properly
  check if alert message for number of unread emails present
  check if yellow text present
  check if email0 present <==== need to send and receive an email before we run this test!!!

click check box => click check box for email0 and see what happens
    i guess we can check css classnames
delete email => delete email0
    check if email disappears

viewing email
====================
click email0 to view it => we may want to send an email and to receive an email so that email0 is a controlled email => we can just use Isaac's scripts
for basic and intermediate => 
  check if correct url
  check if correct title
  check if email filled in 
for student and specialist =>
  check if viewEmail div filled in

basic system's control group
========================
check what happens when inbox sent items, compose and help desk clicked

intermediate, advanced and specialist navigation bar
============================
check what happens when office button clicked => side bar shoudld get style.display = "flex"
check what happens when inbox, sent items clicked
check what happens when close button clicked
for intermediate => test compose button as well

top menu -- advanced and specialist
================
check what happens when office, compose and help button clicked
for specialist => check what happens when deleteAccount clicked.

logout
======
login anywhere and test what happesn when logOut button clicked.


student compose system - accessing it
======================
check that in all 3 systems => clicking compose sends you to the studentComposeMain.html
Need to do so from ALL pages:
  inbox, sent items, viewInbox and viewSent for both basic and intermediate
  mainPage for student advanced

NOTE: WE CAN TEST THE WHOLE SYSTEM USING student basic as it is hte one tat uses all the functionalities of the subsystem

Student Compose system - hints and checkboxes
======================
login from student basic => click compose
choose formal
then test all the hints and checkboxes
login from student basic => click compose => choose informal
then test all the hints and checkboxes

Student compose system - composing an email
======================
login student basic => click compose
  1. compose an email without error and check all checkboxes
  2. compose an email without error => dont check one checkbox for To, CC, Subject, Creeting, Closure, Body 
    => do it it in sequeence => compose => click send email 
    => check alert => check To checkboxes => click send email 
    => check alert => check CC checkboxes => click send email
    => keep doing so until the email is sent //use assert on the alert message
  3. click all checkboxes => compose without to, compose with no cc, compose with 1 cc, compose with multiple cc
  4. compose with fake cc, with fake to

admin compose system
=====================
login as admin => click compose
  1. compose without from,
  2. compose without to
  3. compose without cc, with 1 cc and with multiple cc
  4. compose correctly

deleteAccount
===================
1. correct account - correct secret
2. wrong account - correct secret
3. wrong account - correct secret
4. wrong account - wrong secret

help system
==============
  //dont know yet

Use the following command:
>>> exec(open("C:\\test.py").read())
Where "C:\\" is the directory path to the test you want to run, and
    "test.py" is the test you want to run.

Note on directory paths:
>>> print('C:\Users\Isaac\Documents\SoftwareEngineering') 
The \U is being interpreted as a unicode code point, but it isn't valid, 
    so I get an error. 
In fact, having \ in strings changes the interpretation of a string, so when we
    use strings for directory paths we need to fix that in two ways.

FIX 1:
>>> print(r'C:\Users\Isaac\Documents\SoftwareEngineering')
Putting an r in front of the string makes it a raw string, and it prints fine.

Another example:
>>> print('C:\newFolder\SoftwareEngineering')
    The \n is interpreted as a newline character.
    This will print out:
    "C:
    ewFolder\SoftwareEngineering"
print(r'C:\newFolder\SoftwareEngineering')
    The r in front of the string makes it a raw string, and it prints fine.

FIX 2:
>>> print('C:\\Users\\Isaac\\Documents\\SoftwareEngineering')
The double \ will cancel the special reading of the character following \.